uint inthash(uint key)
{
    key += ~(key << 15);
    key ^= (key >> 10);
    key += (key << 3);
    key ^= (key >> 6);
    key += ~(key << 11);
    key ^= (key >> 16);
    return key;
}

void kernel noise(image2d_t read_write A, float u_time) {
	uint x = get_global_id(0);
	uint y = get_global_id(1);
	uint max = -1;
	float val = (float)inthash(inthash(x) - inthash(y) + (uint)(u_time*100)) / (float)UINT_MAX ;
	float val2 = (float)inthash(inthash(x) - inthash(y) + (uint)(u_time*1000)) / (float)UINT_MAX ;
	float val3 = (float)inthash(inthash(x) - inthash(y) + (uint)(u_time*10000)) / (float)UINT_MAX ;
	write_imagef(A, (int2)(x, y), (float4)(float4)(val*val,val2*val2,val3*val3,0));
}